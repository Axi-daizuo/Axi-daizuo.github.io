var user = yield User.find({
  where: {
    name: 'me'
  },
  limit: 10,
  page: 1
})

var user = yield User.where({
  name: 'me'
}).paginate({
  limit: 10,
  page: 1
}).find()


User.where = function (criteria) {
  var builder = new QueryBuilder(this)
  return builder.where(criteria)
}


function QueryBuilder (model) {
  Object.defineProperty(this, 'model', {
    value: model
  })

  this.options = {}
  this.query = {}
}

QueryBuilder.prototype.where = function (criteria) {
  extend(this.wheres, criteria)
  return this
}

QueryBuilder.prototype.paginate = function (options) {
  options = options || {}
  options.limit = options.limit || 10
  options.page = options.page || 1

  this.options.limit = options.limit
  this.options.skip = options.limit * (options.page - 1)
}

QueryBuilder.prototype.find = function* () {
  return yield model.find(this.wheres, this.options)
}
